{
  "name": "red-atlas-challenge",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": false,
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "build:full": "nest build && tsc -p tsconfig.scripts.json",
    "start": "bash ./scripts/start-dev.sh",
    "start:api": "nest start --watch",
    "start:prod": "node dist/src/main",
    "start:cluster": "node dist/src/cluster.js",
    "start:cluster:ts": "node --require ts-node/register --require tsconfig-paths/register src/cluster.ts",
    "seed": "node --require ts-node/register scripts/seed.ts",
    "seed:docker": "docker compose run --rm -e POSTGRES_HOST=postgres -e POSTGRES_PORT=5432 api node dist/seed.js",
    "lint:prettier:check": "prettier --check \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint:prettier:fix": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint:eslint:check": "eslint \"{src,test}/**/*.ts\"",
    "lint:eslint:fix": "eslint \"{src,test}/**/*.ts\" --fix",
    "test": "./scripts/dev-environment.sh && jest",
    "posttest": "docker compose down",
    "test:watch": "jest --watchAll --runInBand",
    "test:cov": "jest --coverage",
    "test:e2e": "jest -c test/jest-e2e.json --runInBand",
    "typeorm": "node --require ts-node/register --require tsconfig-paths/register ./node_modules/typeorm/cli.js -d src/database/data-source.ts",
    "migration:generate": "npm run typeorm -- migration:generate src/database/migrations/Init",
    "migration:run": "npm run typeorm -- migration:run",
    "migration:revert": "npm run typeorm -- migration:revert",
    "start:worker:imports": "node --require ts-node/register --require tsconfig-paths/register src/imports.worker.ts",
    "start:worker:imports:prod": "node dist/src/imports.worker.js",
    "csv:gen": "node --require ts-node/register scripts/generate-import-csv.ts"
  },
  "dependencies": {
    "@fastify/compress": "^8.1.0",
    "@fastify/csrf-protection": "^7.1.0",
    "@fastify/helmet": "^13.0.1",
    "@fastify/static": "^8.2.0",
    "@keyv/redis": "^5.1.0",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/microservices": "^11.1.6",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/platform-fastify": "^11.1.6",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "amqp-connection-manager": "^4.1.14",
    "amqplib": "^0.10.8",
    "cacheable": "^1.10.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "ioredis": "^5.7.0",
    "nestjs-pino": "^4.4.0",
    "pg": "^8.16.3",
    "pino": "^9.9.0",
    "pino-http": "^10.5.0",
    "prom-client": "^15.1.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.25"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^30.0.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s",
      "!main.ts",
      "!cluster.ts",
      "!imports.worker.ts",
      "!database/**",
      "!**/migrations/**",
      "!**/*.module.ts",
      "!**/*.entity.ts"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "<rootDir>/../test/",
      "<rootDir>/database/",
      "migrations",
      ".module.ts$",
      ".entity.ts$"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
